{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { DEVICE_WIDTH, MARGIN_VIEW, PADDING_CONTENT, TEXTSIZE } from \"../constant/Constant\";\nimport register from \"../api/register\";\nimport saveToken from \"../api/saveToken\";\n\nvar Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: '',\n      rePassword: ''\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"gotoMain\",\n    value: function gotoMain() {\n      this.props.navigation.navigate(\"Home\");\n    }\n  }, {\n    key: \"goBack\",\n    value: function goBack() {\n      this.props.navigation.pop();\n    }\n  }, {\n    key: \"onSuccess\",\n    value: function onSuccess() {\n      Alert.alert('Thông báo', 'Đăng ký thành công', [{\n        text: 'OK'\n      }], {\n        cancelable: false\n      });\n    }\n  }, {\n    key: \"onFail\",\n    value: function onFail() {\n      Alert.alert('Thông báo', 'Đăng ký thất bại', [{\n        text: 'OK'\n      }], {\n        cancelable: false\n      });\n    }\n  }, {\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          rePassword = _this$state.rePassword;\n\n      if (password !== rePassword) {\n        this.onFail();\n      } else {\n        register(email, password).then(function (res) {\n          if (res.user) {\n            global.onSignIn = res.user;\n            saveToken(res.access_token);\n\n            _this2.onSuccess();\n\n            _this2.gotoMain();\n          } else {\n            console.log(res);\n\n            _this2.onFail();\n          }\n        }).catch(function (err) {\n          console.log(err);\n\n          _this2.onFail();\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          rePassword = _this$state2.rePassword;\n      return React.createElement(View, {\n        styles: styles.container\n      }, React.createElement(View, {\n        style: styles.rect\n      }, React.createElement(TextInput, {\n        placeholder: \"Email\",\n        textBreakStrategy: \"highQuality\",\n        keyboardType: \"email-address\",\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            email: text\n          });\n        },\n        color: \"#000\"\n      })), React.createElement(View, {\n        style: styles.rect\n      }, React.createElement(TextInput, {\n        placeholder: \"Password\",\n        textContentType: \"password\",\n        secureTextEntry: true,\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            password: text\n          });\n        },\n        color: \"#000\"\n      })), React.createElement(View, {\n        style: styles.rect\n      }, React.createElement(TextInput, {\n        placeholder: \"Re-password\",\n        textContentType: \"password\",\n        secureTextEntry: true,\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            rePassword: text\n          });\n        },\n        color: \"#000\"\n      })), React.createElement(TouchableOpacity, {\n        onPress: this.onSignUp.bind(this),\n        style: styles.button\n      }, React.createElement(Text, {\n        style: styles.textButton\n      }, \"CONFIRM\")));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport default Register;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  rect: {\n    width: DEVICE_WIDTH - 40,\n    height: 48,\n    borderWidth: 1,\n    borderColor: \"#000\",\n    borderRadius: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: MARGIN_VIEW,\n    marginLeft: MARGIN_VIEW,\n    marginRight: MARGIN_VIEW,\n    padding: PADDING_CONTENT\n  },\n  textInput: {\n    color: \"#000\",\n    width: DEVICE_WIDTH - 40,\n    height: 48,\n    fontSize: TEXTSIZE\n  },\n  textButton: {\n    color: \"#000\",\n    fontSize: TEXTSIZE\n  },\n  button: {\n    width: DEVICE_WIDTH - 40,\n    borderWidth: 1,\n    borderColor: \"rgba(255,255,255,1)\",\n    borderRadius: 15,\n    backgroundColor: \"#ffd11a\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    marginTop: MARGIN_VIEW,\n    marginLeft: MARGIN_VIEW,\n    marginRight: MARGIN_VIEW,\n    padding: PADDING_CONTENT\n  }\n});","map":{"version":3,"sources":["D:/Work_Learn/react-native/learningapp2/src/screens/Register.js"],"names":["React","Component","TextInput","TouchableOpacity","DEVICE_WIDTH","MARGIN_VIEW","PADDING_CONTENT","TEXTSIZE","register","saveToken","Register","props","state","email","password","rePassword","navigation","navigate","pop","Alert","alert","text","cancelable","onFail","then","res","user","global","onSignIn","access_token","onSuccess","gotoMain","console","log","catch","err","styles","container","rect","textInput","setState","onSignUp","bind","button","textButton","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","borderWidth","borderColor","borderRadius","flexDirection","marginTop","marginLeft","marginRight","padding","color","fontSize","alignContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    StyleSheet, Text, View, Alert\r\n} from \"react-native\";\r\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\nimport { DEVICE_WIDTH, MARGIN_VIEW, PADDING_CONTENT, TEXTSIZE } from \"../constant/Constant\";\r\nimport register from \"../api/register\";\r\nimport saveToken from \"../api/saveToken\";\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            rePassword: ''\r\n        };\r\n    }\r\n\r\n    gotoMain() {\r\n        this.props.navigation.navigate(\"Home\")\r\n    }\r\n\r\n    goBack() {\r\n        this.props.navigation.pop()\r\n    }\r\n\r\n    onSuccess() {\r\n        Alert.alert(\r\n            'Thông báo',\r\n            'Đăng ký thành công',\r\n            [\r\n                { text: 'OK' }\r\n            ],\r\n            { cancelable: false }\r\n        );\r\n    }\r\n    \r\n    onFail() {\r\n        Alert.alert(\r\n            'Thông báo',\r\n            'Đăng ký thất bại',\r\n            [\r\n                { text: 'OK' }\r\n            ],\r\n            { cancelable: false }\r\n        );\r\n    }\r\n\r\n    onSignUp() {\r\n        const { email, password, rePassword } = this.state;\r\n        if (password !== rePassword) {\r\n            this.onFail();\r\n        } else {\r\n            register(email, password)\r\n                .then(res => {\r\n                    if(res.user) {\r\n                        global.onSignIn = res.user;\r\n                        saveToken(res.access_token);\r\n                        this.onSuccess();\r\n                        this.gotoMain();\r\n                    } else {\r\n                        console.log(res)\r\n                        this.onFail();\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.onFail();\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { email, password, rePassword } = this.state;\r\n        return (\r\n            <View styles={ styles.container }>\r\n                <View style = { styles.rect }>\r\n                    <TextInput\r\n                        placeholder=\"Email\"\r\n                        textBreakStrategy=\"highQuality\"\r\n                        keyboardType=\"email-address\"\r\n                        style={ styles.textInput }\r\n                        onChangeText={text => this.setState({email: text})}\r\n                        color=\"#000\"\r\n                    ></TextInput>\r\n                </View>\r\n                <View style={ styles.rect }>\r\n                    <TextInput\r\n                        placeholder=\"Password\"\r\n                        textContentType=\"password\"\r\n                        secureTextEntry={true}\r\n                        style={ styles.textInput }\r\n                        onChangeText={text => this.setState({password: text})}\r\n                        color=\"#000\"\r\n                    ></TextInput>\r\n                </View>\r\n                <View style={ styles.rect }>\r\n                    <TextInput\r\n                        placeholder=\"Re-password\"\r\n                        textContentType=\"password\"\r\n                        secureTextEntry={true}\r\n                        style={ styles.textInput }\r\n                        onChangeText={text => this.setState({rePassword: text})}\r\n                        color=\"#000\"\r\n                    ></TextInput>\r\n                </View>\r\n\r\n                <TouchableOpacity\r\n                    onPress={this.onSignUp.bind(this)}\r\n                    style={ styles.button }\r\n                >\r\n                    <Text style={ styles.textButton }>CONFIRM</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    \r\n    rect: {\r\n        width: DEVICE_WIDTH-40,\r\n        height: 48,\r\n        borderWidth: 1,\r\n        borderColor: \"#000\",\r\n        borderRadius: 15,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        marginTop: MARGIN_VIEW,\r\n        marginLeft: MARGIN_VIEW,\r\n        marginRight: MARGIN_VIEW,\r\n        padding: PADDING_CONTENT\r\n    },\r\n\r\n    textInput: {\r\n        color: \"#000\",\r\n        width: DEVICE_WIDTH-40,\r\n        height: 48,\r\n        fontSize: TEXTSIZE,\r\n    },\r\n\r\n    textButton: {\r\n        color: \"#000\",\r\n        fontSize: TEXTSIZE\r\n    },\r\n\r\n    button: {\r\n        width: DEVICE_WIDTH - 40,\r\n        borderWidth: 1,\r\n        borderColor: \"rgba(255,255,255,1)\",\r\n        borderRadius: 15,\r\n        backgroundColor: \"#ffd11a\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        marginTop: MARGIN_VIEW,\r\n        marginLeft: MARGIN_VIEW,\r\n        marginRight: MARGIN_VIEW,\r\n        padding: PADDING_CONTENT\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}