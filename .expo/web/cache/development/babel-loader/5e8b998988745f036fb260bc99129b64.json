{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { DEVICE_WIDTH, PADDING_CONTENT, TEXTSIZE } from \"../constant/Constant\";\nimport initDataCourse from \"../api/initDataCourses\";\nimport getToken from \"../api/getToken\";\n\nvar ListCourses = function (_Component) {\n  _inherits(ListCourses, _Component);\n\n  var _super = _createSuper(ListCourses);\n\n  function ListCourses(props) {\n    var _this;\n\n    _classCallCheck(this, ListCourses);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      listData: []\n    };\n    return _this;\n  }\n\n  _createClass(ListCourses, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getToken().then(function (token) {\n        return initDataCourse(token);\n      }).then(function (listData) {\n        return _this2.setState({\n          listData: listData\n        });\n      }).catch(function (err) {\n        return _this2.gotoLogin();\n      });\n    }\n  }, {\n    key: \"gotoCourse\",\n    value: function gotoCourse() {\n      this.props.navigation.navigate(\"Course\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var listData = this.state.listData;\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(ScrollView, null, listData.map(function (item) {\n        return React.createElement(TouchableOpacity, {\n          style: styles.rect2,\n          onPress: _this3.gotoCourse.bind(_this3),\n          key: item.id\n        }, React.createElement(Text, {\n          style: styles.textButton\n        }, \" \", item.code, \" \"), React.createElement(Text, {\n          style: styles.textButton\n        }, \" \", item.started_at, \" \"));\n      })));\n    }\n  }]);\n\n  return ListCourses;\n}(Component);\n\nexport default ListCourses;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  rect2: {\n    borderColor: \"#000\",\n    borderWidth: 1,\n    flexDirection: \"column\",\n    width: DEVICE_WIDTH,\n    height: 100,\n    padding: PADDING_CONTENT\n  },\n  textButton: {\n    color: \"#000\",\n    fontSize: TEXTSIZE\n  }\n});","map":{"version":3,"sources":["D:/Work_Learn/react-native/learningapp2/src/screens/ListCourses.js"],"names":["React","Component","DEVICE_WIDTH","PADDING_CONTENT","TEXTSIZE","initDataCourse","getToken","ListCourses","props","state","listData","then","token","setState","catch","err","gotoLogin","navigation","navigate","styles","container","map","item","rect2","gotoCourse","bind","id","textButton","code","started_at","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderColor","borderWidth","flexDirection","width","height","padding","color","fontSize"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAEA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,QAAxC;AACA,OAAOC,cAAP;AACA,OAAOC,QAAP;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFe;AAGlB;;;;WACD,6BAAoB;AAAA;;AAChBJ,MAAAA,QAAQ,GACPK,IADD,CACM,UAAAC,KAAK;AAAA,eAAIP,cAAc,CAACO,KAAD,CAAlB;AAAA,OADX,EAECD,IAFD,CAEM,UAAAD,QAAQ;AAAA,eAAI,MAAI,CAACG,QAAL,CAAc;AAAEH,UAAAA,QAAQ,EAARA;AAAF,SAAd,CAAJ;AAAA,OAFd,EAGCI,KAHD,CAGO,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,SAAL,EAAJ;AAAA,OAHV;AAIH;;;WAED,sBAAa;AACT,WAAKR,KAAL,CAAWS,UAAX,CAAsBC,QAAtB,CAA+B,QAA/B;AACH;;;WACD,kBAAS;AAAA;;AACL,UAAQR,QAAR,GAAqB,KAAKD,KAA1B,CAAQC,QAAR;AACA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGS,MAAM,CAACC;AAArB,SACI,oBAAC,UAAD,QACMV,QAAQ,CAACW,GAAT,CAAa,UAACC,IAAD,EAAU;AACrB,eACI,oBAAC,gBAAD;AACI,UAAA,KAAK,EAAGH,MAAM,CAACI,KADnB;AAEI,UAAA,OAAO,EAAE,MAAI,CAACC,UAAL,CAAgBC,IAAhB,CAAqB,MAArB,CAFb;AAGI,UAAA,GAAG,EAAEH,IAAI,CAACI;AAHd,WAKI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAGP,MAAM,CAACQ;AAArB,gBAAoCL,IAAI,CAACM,IAAzC,MALJ,EAMI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAGT,MAAM,CAACQ;AAArB,gBAAoCL,IAAI,CAACO,UAAzC,MANJ,CADJ;AAUH,OAXC,CADN,CADJ,CADJ;AAkBH;;;;EAnCqB5B,S;;AAsC1B,eAAeM,WAAf;AAEA,IAAMY,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,SAAS,EAAE;AACPY,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAQ7BZ,EAAAA,KAAK,EAAE;AACHa,IAAAA,WAAW,EAAE,MADV;AAEHC,IAAAA,WAAW,EAAE,CAFV;AAGHC,IAAAA,aAAa,EAAE,QAHZ;AAIHC,IAAAA,KAAK,EAAErC,YAJJ;AAKHsC,IAAAA,MAAM,EAAE,GALL;AAMHC,IAAAA,OAAO,EAAEtC;AANN,GARsB;AAiB7BwB,EAAAA,UAAU,EAAE;AACRe,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,QAAQ,EAAEvC;AAFF;AAjBiB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, View, Text, ScrollView, TouchableOpacity, Image } from \"react-native\";\r\nimport { DEVICE_WIDTH, PADDING_CONTENT, TEXTSIZE } from \"../constant/Constant\";\r\nimport initDataCourse from \"../api/initDataCourses\";\r\nimport getToken from \"../api/getToken\";\r\n\r\nclass ListCourses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { listData: [] };\r\n    }\r\n    componentDidMount() {\r\n        getToken()\r\n        .then(token => initDataCourse(token))\r\n        .then(listData => this.setState({ listData }))\r\n        .catch(err => this.gotoLogin());\r\n    }\r\n\r\n    gotoCourse() {\r\n        this.props.navigation.navigate(\"Course\");\r\n    }\r\n    render() {\r\n        const { listData } = this.state;\r\n        return(\r\n            <View style={ styles.container }>\r\n                <ScrollView>\r\n                    { listData.map((item) => {\r\n                        return (\r\n                            <TouchableOpacity\r\n                                style={ styles.rect2 }\r\n                                onPress={this.gotoCourse.bind(this)}\r\n                                key={item.id}\r\n                            >\r\n                                <Text style={ styles.textButton }> {item.code} </Text>\r\n                                <Text style={ styles.textButton }> {item.started_at} </Text>\r\n                            </TouchableOpacity>\r\n                        );\r\n                    }) }\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListCourses;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    rect2: {\r\n        borderColor: \"#000\",\r\n        borderWidth: 1,\r\n        flexDirection: \"column\",\r\n        width: DEVICE_WIDTH,\r\n        height: 100,\r\n        padding: PADDING_CONTENT,\r\n    },\r\n\r\n    textButton: {\r\n        color: \"#000\",\r\n        fontSize: TEXTSIZE\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}